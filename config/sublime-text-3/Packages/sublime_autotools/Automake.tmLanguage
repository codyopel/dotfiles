<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>am</string>
		<string>am.inc</string>
		<string>Makefile.in</string>
	</array>
	<key>name</key>
	<string>Automake</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#no-subst-comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special-assignment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^([a-zA-Z_@][\w@]*)\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>source.makefile2</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#substitution</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assignment-rhs</key>
		<dict>
			<key>comment</key>
			<string>What is allowed on the right-hand-side of an assignment</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#automatic-variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-reference</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shell-variable-reference</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped-char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#double-quoted-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#single-quoted-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#backtick-subshell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#substitution</string>
				</dict>
			</array>
		</dict>
		<key>automatic-variable</key>
		<dict>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>match</key>
			<string>\$([@%&lt;?^+*]|\([@*%&lt;^?][DF]\))</string>
			<key>name</key>
			<string>variable.language.makefile</string>
		</dict>
		<key>backtick-subshell</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>end</key>
			<string>`</string>
			<key>name</key>
			<string>string.interpolated.backtick.makefile</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.shell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-reference</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>#</string>
			<key>comment</key>
			<string>Copy of makefile's comment, but substitutions are allowed</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.number-sign.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#substitution</string>
				</dict>
			</array>
		</dict>
		<key>dir-assignment</key>
		<dict>
			<key>begin</key>
			<string>^ *([\w@]+)(dir)\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.directory.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.automake</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Assignment to a directory variable (e.g. foobardir)</string>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.directory.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<key>double-quoted-string</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.makefile</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped-char</string>
				</dict>
			</array>
		</dict>
		<key>escaped-char</key>
		<dict>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.makefile</string>
		</dict>
		<key>flags-assignment</key>
		<dict>
			<key>begin</key>
			<string>^ *((?:AM_)?(?:C|CCAS|CPP|CXX|F|GCJ|JAVAC|L|LD|LIBTOOL|(?:[A-Z]+_)?LOG|MAKEINFO(?:HTML)?|OBJC|R|UPC|VALA|Y)FLAGS)\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.flags.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Assignment to a FLAGS variable</string>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.flags.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<key>keyword-assignment</key>
		<dict>
			<key>begin</key>
			<string>^ *(AM_(?:DEFAULT_SOURCE_EXT|DISTCHECK_CONFIGURE_FLAGS|TESTS_(?:ENVIRONMENT|FD_REDIRECT))|AUTOMAKE_OPTIONS|BUILT_SOURCES|CC|CLASSPATH_ENV|(?:DIST|MAINTAINER|MOSTLY)?CLEANFILES|COMPILE|(?:CXX|FC|OBJC|UPC)(?:COMPILE|LINK)?|DEFAULT_INCLUDES|DEFS|DVIPS|ETAGS_ARGS|EXTRA_DIST|F77(?:COMPILE)?|FLINK|INCLUDE|JAVAC|JAVAROOT|LIBS|LINK|(?:[A-Z]+_)?LOG_COMPILER|MAKEINFO(?:HTML)?|(?:OMIT|TAGS)_DEPENDENCIES|(?:DIST_)?SUBDIRS|SUFFIXES|TESTS(?:_ENVIRONMENT)?|TEXI2(?:DVI|PDF)|TEXINFO_TEX|VALAC)\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Assignment to a non-primary, secondary, flags, or dir variable</string>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.keyword.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<key>no-subst-comment</key>
		<dict>
			<key>begin</key>
			<string>^##</string>
			<key>comment</key>
			<string>Lines starting with ## are not copied into Makefile.in, and no substitutions are performed</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.double-number-sign.automake</string>
		</dict>
		<key>primary-assignment</key>
		<dict>
			<key>begin</key>
			<string>^ *(?:((?:(?:(?:no)?dist|no(?:base|trans))_)*)(?:(noinst|check|EXTRA)|(s?bin|(?:pkg)?lib(?:exec)?|(?:pkg)?data|(?:pkg|old)?include|dataroot|sysconf|(?:shared|local)state|doc|info|html|dvi|pdf|ps|lisp|locale|man[1-8]?(?:ext)?|src|(?:pkg)?python|(?:pkg)?pyexec)|([\w@]+))(_(?:PROGRAMS|(?:LT)?LIBRARIES|LISP|PYTHON|JAVA|SCRIPTS|DATA|HEADERS|MANS|TEXINFOS)))\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.prefix.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.nondir-target.automake</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.dir-target.automake</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.other.dir-target.automake</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.primary.automake</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Assignment to a primary: any number of prefixes_, then either a nondir target (e.g. noinst), a dir target (e.g. bin), or a user-defined dir, then finally a _PRIMARY</string>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.primary.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<key>secondary-assignment</key>
		<dict>
			<key>begin</key>
			<string>^ *((?:(?:(?:no)?dist|no(?:base|trans)|EXTRA)_)*)([\w@]+)(_(?:AR|DEPENDENCIES|LDADD|LIBADD|LINK|SHORTNAME|SOURCES|(?:C|CCAS|CPP|CXX|F|GCJ|JAVAC|L|LD|LIBTOOL|(?:[A-Z]+_)?LOG|MAKEINFO(?:HTML)?|OBJC|R|UPC|VALA|Y)FLAGS))\s*([\+\?:]?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.prefix.automake</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.canonicalized-program-name.automake</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.secondary.automake</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.automake</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Assignment to a secondary: any number of prefix_ or EXTRA_, then the canonicalized_program_name, and finally a _SECONDARY</string>
			<key>end</key>
			<string>(?&lt;!\\)\n$</string>
			<key>name</key>
			<string>meta.assignment.secondary.automake</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#assignment-rhs</string>
				</dict>
			</array>
		</dict>
		<key>shell-variable-reference</key>
		<dict>
			<key>begin</key>
			<string>\$\{</string>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>contentName</key>
			<string>variable.other.shell.makefile</string>
			<key>end</key>
			<string>\}</string>
		</dict>
		<key>single-quoted-string</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.makefile</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped-char</string>
				</dict>
			</array>
		</dict>
		<key>special-assignment</key>
		<dict>
			<key>comment</key>
			<string>The contexts listed here represent an assignment to an Automake variable</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#flags-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primary-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#secondary-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dir-assignment</string>
				</dict>
			</array>
		</dict>
		<key>substitution</key>
		<dict>
			<key>comment</key>
			<string>Substitutions from AC_SUBST</string>
			<key>match</key>
			<string>@\w+@</string>
			<key>name</key>
			<string>string.interpolated.substitution.automake</string>
		</dict>
		<key>variable-reference</key>
		<dict>
			<key>begin</key>
			<string>\$\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.makefile</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Copy of Makefile</string>
			<key>contentName</key>
			<string>variable.other.makefile</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.makefile</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.substitution.makefile</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.substitution.makefile</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)[a-zA-Z0-9_%.]+(=)[a-zA-Z0-9_%.]+</string>
					<key>name</key>
					<string>string.other.substitution.makefile</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\$\()(addprefix|addsuffix|basename|call|dir|error|filter(-out)?|findstring|firstword|foreach|join|notdir|origin|patsubst|shell|sort|strip|subst|suffix|warning|wildcard|words?)\b</string>
					<key>name</key>
					<string>support.function.makefile</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.automake</string>
	<key>uuid</key>
	<string>db931ddb-e919-4736-bd7d-fcf6e1ceca7f</string>
</dict>
</plist>
